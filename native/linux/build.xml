<project name="native" default="help" basedir=".">
  <description>native</description>
  <property environment="env"/>

  <property name="opt" value="-O3"/>  <!-- change to -g to debug -->

  <target name="linux" description="create linux native so for x64">
    <exec command="gcc ${opt} -D_FILE_OFFSET_BITS=64 -I /usr/include/ffmpeg -I ${java.home}/include/linux -I ${java.home}/include -I /usr/include/x86_64-linux-gnu -I ../headers linux.cpp -c -o linux64.o -fPIC"/>
    <exec command="gcc ${opt} -I ../glfw/include -I /usr/include/x86_64-linux-gnu glfw.c -c -o glfw64.o -fPIC"/>
    <exec command="gcc -shared linux64.o glfw64.o -L /usr/lib/x86_64-linux-gnu -lX11 -lXrandr -lXinerama -lXcursor -lpam -lncurses -o ../jfnative64.so"/>
    <exec command="ar r ../jfnative64.a linux64.o glfw64.o"/>

    <delete>
      <fileset dir="." includes="*.o"/>
    </delete>
  </target>

  <target name="freebsd" description="create linux native so for x64/freebsd">
    <exec command="gcc ${opt} -D_FILE_OFFSET_BITS=64 -I /usr/include/ffmpeg -I ${java.home}/include/freebsd -I ${java.home}/include -I ../headers linux.cpp -c -o linux64.o -fPIC"/>
    <exec command="gcc ${opt} -I ../glfw/include glfw.c -c -o glfw64.o -fPIC"/>
    <exec command="gcc -shared linux64.o glfw64.o -lX11 -lXrandr -lXinerama -lXcursor -lncurses -o ../jfnative64.so"/>
    <exec command="ar r ../jfnative64.a linux64.o glfw64.o"/>

    <delete>
      <fileset dir="." includes="*.o"/>
    </delete>
  </target>

  <target name="arm64" description="create linux native so for arm64">
    <exec command="gcc ${opt} -D_FILE_OFFSET_BITS=64 -I /usr/include/ffmpeg -I ${java.home}/include -I ${java.home}/include/linux -I /usr/include/aarch64-linux-gnu -I ../headers linux.cpp -c -o linux64.o -fPIC"/>
    <exec command="gcc ${opt} -I../glfw/include -I /usr/include/aarch64-linux-gnu glfw.c -c -o glfw64.o -fPIC"/>
    <exec command="gcc -shared linux64.o glfw64.o -L /usr/lib/aarch64-linux-gnu -lX11 -lXrandr -lXinerama -lXcursor -lpam -lncurses -o ../jfnative64.so"/>
    <exec command="ar r ../jfnative64.a linux64.o glfw64.o"/>

    <delete>
      <fileset dir="." includes="*.o"/>
    </delete>
  </target>

  <target name="deb" description="install debian prerequisites">
    <exec command="apt --yes install g++ default-jdk ant libx11-dev libfuse-dev libpam0g-dev libavcodec-dev libavformat-dev libavutil-dev libswscale-dev mesa-common-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxt-dev libncurses-dev zlib1g-dev sudo"/>
  </target>

  <target name="rpm" description="install fedora prerequisites">
    <exec command="dnf -y install gcc-c++ java-11-openjdk-devel ant libX11-devel fuse-devel pam-devel ffmpeg-free-devel mesa-libGL-devel libXcursor-devel libXrandr-devel libXinerama-devel libXi-devel libXt-devel ncurses-devel rpm-build"/>
  </target>

  <target name="pac" description="install arch prerequisites">
    <exec command="pacman -S jdk11-openjdk apache-ant fuse pam ffmpeg mesa libxcursor libxrandr libxinerama libxi libxt"/>
  </target>

  <target name="pkg" description="install freebsd prerequisites">
    <exec command="pkg install -y gcc ffmpeg libX11 libXrandr libXcursor libXinerama libXi libXt ncurses mesa-libs"/>
  </target>

  <target name="get-bin-x86" description="download pre-built binaries for x86">
    <sequential>
      <get src="http://javaforce.sourceforge.net/jf-lib-lnx64-x86.zip" dest="../jf-lib-lnx64-x86.zip" usetimestamp="true"/>
      <unzip src="../jf-lib-lnx64-x86.zip" dest=".."/>
    </sequential>
  </target>

  <target name="zip-bin-x86" description="zip pre-built binaries">
    <zip destfile="../jf-lib-lnx64-x86.zip">
      <fileset dir="..">
        <include name="*.so"/>
      </fileset>
    </zip>
  </target>

  <target name="get-bin-arm" description="download pre-built binaries for arm">
    <sequential>
      <get src="http://javaforce.sourceforge.net/jf-lib-lnx64-arm.zip" dest="../jf-lib-lnx64-arm.zip" usetimestamp="true"/>
      <unzip src="../jf-lib-lnx64-arm.zip" dest=".."/>
    </sequential>
  </target>

  <target name="zip-bin-arm" description="zip pre-built binaries">
    <zip destfile="../jf-lib-lnx64-arm.zip">
      <fileset dir="..">
        <include name="*.so"/>
      </fileset>
    </zip>
  </target>

  <target name="help">
    <echo>ant deb : install Debian/Ubuntu prerequisites</echo>
    <echo>ant rpm : install Fedora prerequisites</echo>
    <echo>ant pac : install Arch prerequisites</echo>
    <echo>ant pkg : install FreeBSD prerequisites</echo>

    <echo>ant linux : build intel x86 64bit (Debian/Ubuntu/Fedora/Arch)</echo>
    <echo>ant freebsd : build intel x86 64bit (FreeBSD)</echo>
    <echo>ant arm64 : build ARM 64bit (Raspberry PI)</echo>
  </target>

</project>
