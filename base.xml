<!-- Note : Requires ANT 1.9.8+ -->
<project xmlns:if="ant:if" xmlns:unless="ant:unless">
  <!--these should be set before importing this file to override default behavior-->
  <property name="ico" value="${app}.ico"/>
  <property name="msi" value="${app}"/>
  <property name="cfg" value="${app}.cfg"/>
  <property name="candle_extra" value=""/>
  <property name="light_extra" value=""/>
  <property name="apptype" value="w"/>
  <property name="heat_home" value="jre"/>
  <property name="ffmpeg_home" value=""/>
  <property name="project2" value=""/>
  <property name="project3" value=""/>
  <property name="project4" value=""/>
  <property name="project5" value=""/>
  <property name="jarpath" value="."/>
  <property name="jdkver" value="11"/>
  <property name="lib" value="${home}/lib"/>

  <import file="versions.xml"/>

  <!--import properties from project cfg file : CLASSPATH, MAINCLASS, etc-->
  <property file="${cfg}"/>

  <target name="javadoc" description="generate java documentation">
    <javadoc sourcepath="src" destdir="javadoc">
      <classpath>
        <fileset dir="${lib}" includes="*.jar"/>
      </classpath>
    </javadoc>
    <zip destfile="${app}-${version}-javadoc.jar">
      <fileset dir="javadoc" includes="**/*"/>
    </zip>
  </target>

  <target name="src" description="generate src archive">
    <zip destfile="${app}-${version}-sources.jar">
      <fileset dir="src" includes="**/*"/>
    </zip>
  </target>

  <target name="sign" description="generate asc files">
    <exec command="gpg -ab ${app}-${version}.jar"/>
    <exec command="gpg -ab ${app}-${version}-sources.jar"/>
    <exec command="gpg -ab ${app}-${version}-javadoc.jar"/>
    <exec command="gpg -ab ${app}-${version}.pom"/>
  </target>

  <target name="deploy" depends="src,javadoc,jar" description="generate deployment artifacts">
    <copy file="${app}.jar" tofile="${app}-${version}.jar"/>
    <copy file="pom.xml" tofile="${app}-${version}.pom"/>
    <antcall target="sign"/>
  </target>

  <target name="depnatives">
    <copy todir=".">
      <fileset dir="${home}/native" includes="*.dll"/>
      <fileset dir="${home}/native" includes="*.so"/>
      <fileset dir="${home}/native" includes="*.dylib"/>
    </copy>
  </target>

  <target name="ffmpeg">
    <copy todir=".">
      <fileset dir="${home}/ffmpeg" includes="*.dll"/>
      <fileset dir="${home}/ffmpeg" includes="*.so"/>
      <fileset dir="${home}/ffmpeg" includes="*.dylib"/>
    </copy>
  </target>

  <macrodef name="download">
    <attribute name="url"/>
    <attribute name="dest"/>
    <sequential>
      <!-- exists property is not working -->
      <local name="exists"/>
      <available property="exists" file="@{dest}"/>
      <get unless:true="exists" src="@{url}" dest="@{dest}" usetimestamp="true"/>
    </sequential>
  </macrodef>

  <macrodef name="maven">
    <attribute name="name"/>
    <attribute name="path"/>
    <attribute name="version"/>
    <attribute name="repo" default="https://repo1.maven.org/maven2"/>
    <attribute name="dest" default="@{name}"/>
    <sequential>
      <download url="@{repo}/@{path}/@{name}/@{version}/@{name}-@{version}.jar" dest="${lib}/@{dest}-@{version}.jar"/>
    </sequential>
  </macrodef>

  <macrodef name="copyjar">
    <attribute name="name"/>
    <attribute name="path"/>
    <attribute name="version"/>
    <sequential>
      <copy file="${lib}/@{name}-@{version}.jar" tofile="@{path}/@{name}.jar"/>
    </sequential>
  </macrodef>

  <!--install dependancies to project folder : these will remove the "version" from the jar making project builds easier-->

  <target name="jar-javaforce">
    <copyjar name="javaforce" version="${javaforce-version}" path="${jarpath}"/>
  </target>

  <target name="jar-twelvemonkeys-common-lang">
    <copyjar name="common-lang" version="${twelvemonkeys-version}" path="${jarpath}"/>
  </target>

  <target name="jar-twelvemonkeys-common-io">
    <copyjar name="common-io" version="${twelvemonkeys-version}" path="${jarpath}"/>
  </target>

  <target name="jar-twelvemonkeys-common-image">
    <copyjar name="common-image" version="${twelvemonkeys-version}" path="${jarpath}"/>
  </target>

  <target name="jar-twelvemonkeys-imageio-core">
    <copyjar name="imageio-core" version="${twelvemonkeys-version}" path="${jarpath}"/>
  </target>

  <target name="jar-twelvemonkeys-imageio-metadata">
    <copyjar name="imageio-metadata" version="${twelvemonkeys-version}" path="${jarpath}"/>
  </target>

  <target name="jar-twelvemonkeys-imageio-tiff" depends="jar-twelvemonkeys-common-lang,jar-twelvemonkeys-common-io,jar-twelvemonkeys-common-image,jar-twelvemonkeys-imageio-core,jar-twelvemonkeys-imageio-metadata">
    <copyjar name="imageio-tiff" version="${twelvemonkeys-version}" path="${jarpath}"/>
  </target>

  <target name="jar-derby">
    <copyjar name="derby" version="${derby-version}" path="${jarpath}"/>
  </target>

  <target name="jar-jcifs">
    <copyjar name="jcifs" version="${jcifs-version}" path="${jarpath}"/>
  </target>

  <target name="jar-mssql-jdbc">
    <copyjar name="mssql-jdbc" version="${mssql-jdbc-version}" path="${jarpath}"/>
  </target>

  <target name="jar-mysql-connector">
    <copyjar name="mysql-connector" version="${mysql-connector-version}" path="${jarpath}"/>
  </target>

  <target name="jar-bouncycastle">
    <copyjar name="bouncycastle" version="${bouncycastle-version}" path="${jarpath}"/>
  </target>

  <target name="jar-servlet-api">
    <copyjar name="servlet-api" version="${tomcat-version}" path="${jarpath}"/>
  </target>

  <target name="jar-jsp-api">
    <copyjar name="jsp-api" version="${tomcat-version}" path="${jarpath}"/>
  </target>

  <target name="jar-websocket-api">
    <copyjar name="websocket-api" version="${tomcat-version}" path="${jarpath}"/>
  </target>

  <target name="jar-filters">
    <copyjar name="filters" version="${filters-version}" path="${jarpath}"/>
  </target>

  <target name="jar-bacnet">
    <copyjar name="bacnet" version="${bacnet-version}" path="${jarpath}"/>
  </target>

  <target name="jar-xerces">
    <copyjar name="xerces" version="${xerces-version}" path="${jarpath}"/>
  </target>

  <target name="jar-jdom">
    <copyjar name="jdom" version="${jdom-version}" path="${jarpath}"/>
  </target>

  <target name="jar-log4j-core">
    <copyjar name="log4j-core" version="${log4j-version}" path="${jarpath}"/>
  </target>

  <target name="jar-log4j-api">
    <copyjar name="log4j-api" version="${log4j-version}" path="${jarpath}"/>
  </target>

  <target name="jar-log4j-1.2-api">
    <copyjar name="log4j-1.2-api" version="${log4j-version}" path="${jarpath}"/>
  </target>

  <target name="jar-slf4j-api">
    <copyjar name="slf4j-api" version="${slf4j-version}" path="${jarpath}"/>
  </target>

  <target name="jar-slf4j-log4j12">
    <copyjar name="slf4j-log4j12" version="${slf4j-version}" path="${jarpath}"/>
  </target>

  <target name="jar-mina">
    <copyjar name="mina" version="${mina-version}" path="${jarpath}"/>
  </target>

  <target name="jar-sshd-core">
    <copyjar name="sshd-core" version="${sshd-version}" path="${jarpath}"/>
  </target>

  <target name="jar-sshd-common">
    <copyjar name="sshd-common" version="${sshd-version}" path="${jarpath}"/>
  </target>

  <target name="jar-sshd-mina">
    <copyjar name="sshd-mina" version="${sshd-version}" path="${jarpath}"/>
  </target>

  <target name="jar-sshd-sftp">
    <copyjar name="sshd-sftp" version="${sshd-version}" path="${jarpath}"/>
  </target>

  <target name="jar-jargs">
    <copyjar name="jargs" version="${jargs-version}" path="${jarpath}"/>
  </target>

  <target name="jar-llrp">
    <copyjar name="llrp" version="${llrp-version}" path="${jarpath}"/>
  </target>

  <target name="jar-commons-lang3">
    <copyjar name="commons-lang3" version="${commons-lang3-version}" path="${jarpath}"/>
  </target>

  <target name="check-builds">
    <available file="${project2}.xml" property="project2.present"/>
    <available file="${project3}.xml" property="project3.present"/>
    <available file="${project4}.xml" property="project4.present"/>
    <available file="${project5}.xml" property="project5.present"/>
  </target>

  <target name="executable2" depends="check-builds" if="project2.present">
    <ant antfile="${project2}.xml" target="executable" inheritAll="false"/>
  </target>

  <target name="executable3" depends="check-builds" if="project3.present">
    <ant antfile="${project3}.xml" target="executable" inheritAll="false"/>
  </target>

  <target name="executable4" depends="check-builds" if="project4.present">
    <ant antfile="${project4}.xml" target="executable" inheritAll="false"/>
  </target>

  <target name="executable5" depends="check-builds" if="project5.present">
    <ant antfile="${project5}.xml" target="executable" inheritAll="false"/>
  </target>

  <target name="executable" depends="jar,depjars,depnatives,executable2,executable3,executable4,executable5" description="create executable launcher">
    <sequential>
      <java classpath="${home}/javaforce.jar" classname="javaforce.utils.GenExecutable" fork="true">
        <arg value="${home}"/>
        <arg value="${app}"/>
        <arg value="${apptype}"/>
        <arg value="${ico}"/>
        <arg value="${cfg}"/>
      </java>
    </sequential>
  </target>

  <target name="graal2" depends="check-builds" if="project2.present">
    <ant antfile="${project2}.xml" target="graal" inheritAll="false"/>
  </target>

  <target name="graal3" depends="check-builds" if="project3.present">
    <ant antfile="${project3}.xml" target="graal" inheritAll="false"/>
  </target>

  <target name="graal4" depends="check-builds" if="project4.present">
    <ant antfile="${project4}.xml" target="graal" inheritAll="false"/>
  </target>

  <target name="graal5" depends="check-builds" if="project5.present">
    <ant antfile="${project5}.xml" target="graal" inheritAll="false"/>
  </target>

  <target name="graal" if="graal" depends="jar,depjars,graal2,graal3,graal4,graal5" description="generate aot library">
    <sequential>
      <java classpath="${home}/javaforce.jar" classname="javaforce.utils.GenGraal" fork="true">
        <arg value="${MAINCLASS}"/>
      </java>
      <java classpath="${home}/javaforce.jar" classname="javaforce.utils.ExecGraal" fork="true">
        <arg value="${CLASSPATH}"/>
        <arg value="${MAINCLASS}"/>
      </java>
    </sequential>
  </target>

  <target name="graalagent">
    <sequential>
      <java classpath="${home}/javaforce.jar" classname="javaforce.utils.GenGraal" fork="true">
        <arg value="${MAINCLASS}"/>
      </java>
      <java classpath="${home}/javaforce.jar" classname="javaforce.utils.ExecGraalAgent" fork="true">
        <arg value="${CLASSPATH}"/>
        <arg value="${MAINCLASS}"/>
      </java>
    </sequential>
  </target>

  <target name="run">
    <sequential>
      <java classpath="${home}/javaforce.jar" classname="javaforce.utils.ExecProject" fork="true">
        <arg value="${CLASSPATH}"/>
        <arg value="${MAINCLASS}"/>
      </java>
    </sequential>
  </target>

  <!-- Windows targets -->

  <target name="msi" depends="executable,graal" description="create msi installer file 64bit">
    <sequential>
      <exec command="candle -ext WixFirewallExtension -ext WixUtilExtension ${candle_extra} -o wix.obj wix64.xml"/>
      <java classpath="${home}/javaforce.jar" classname="javaforce.utils.WixHeat" fork="true">
        <arg value="${jre}"/>
        <arg value="jre.xml"/>
        <arg value="JRE"/>
        <arg value="${heat_home}"/>
      </java>
      <exec command="candle -o jre.obj jre.xml"/>
      <java classpath="${home}/javaforce.jar" classname="javaforce.utils.WixHeat" fork="true">
        <arg value="${home}/ffmpeg"/>
        <arg value="ffmpeg.xml"/>
        <arg value="FFMPEG"/>
        <arg value="."/>
      </java>
      <exec command="candle -o ffmpeg.obj ffmpeg.xml"/>
      <java classpath="${home}/javaforce.jar" classname="javaforce.utils.WixHeat" fork="true">
        <arg value="${home}/jre_base/bin"/>
        <arg value="msvcrt.xml"/>
        <arg value="MSVCRT"/>
        <arg value="."/>
        <arg value="**/api*.dll"/>
        <arg value="**/msvc*.dll"/>
        <arg value="**/ucrtbase.dll"/>
        <arg value="**/vcruntime*.dll"/>
      </java>
      <exec command="candle -o msvcrt.obj msvcrt.xml"/>
      <exec command="light ${light_extra} -ext WixUIExtension -ext WixFirewallExtension -ext WixUtilExtension -cultures:en-us -b ${home} -b ${jre} -b ${jre}\\bin -b ${home}/ffmpeg -dWixUILicenseRtf=${home}/license.rtf -o ${msi}-${version}-win64.msi wix.obj jre.obj ffmpeg.obj msvcrt.obj"/>
      <delete file="wix.obj"/>
      <delete file="jre.obj"/>
      <delete file="jre.xml"/>
      <delete file="ffmpeg.obj"/>
      <delete file="ffmpeg.xml"/>
      <delete file="msvcrt.obj"/>
      <delete file="msvcrt.xml"/>
      <delete file="${msi}-${version}-win64.wixpdb"/>
      <move unless:set="nomove" file="${msi}-${version}-win64.msi" todir="${home}/release"/>
    </sequential>
  </target>

  <!-- Linux targets -->

  <target name="installapp2" depends="check-builds" if="project2.present">
    <ant antfile="${project2}.xml" target="installapp" inheritAll="false"/>
  </target>

  <target name="installapp3" depends="check-builds" if="project3.present">
    <ant antfile="${project3}.xml" target="installapp" inheritAll="false"/>
  </target>

  <target name="installapp4" depends="check-builds" if="project4.present">
    <ant antfile="${project4}.xml" target="installapp" inheritAll="false"/>
  </target>

  <target name="installapp5" depends="check-builds" if="project5.present">
    <ant antfile="${project5}.xml" target="installapp" inheritAll="false"/>
  </target>

  <target name="installapp" depends="executable,graal,installapp2,installapp3,installapp4,installapp5">
    <sequential>
      <exec command="sudo cp ${app}.bin /usr/bin/${app}"/>
      <exec command="sudo ant -f ${ant.file} install"/>
    </sequential>
  </target>

  <target name="deb" depends="installapp" description="create deb package">
    <java classpath="${home}/javaforce.jar" classname="javaforce.utils.GenDEB" fork="true">
      <arg value="${app}"/>
      <arg value="${version}"/>
      <arg value="${home}"/>
    </java>
  </target>

  <target name="rpm" depends="installapp" description="create rpm package">
    <java classpath="${home}/javaforce.jar" classname="javaforce.utils.GenRPM" fork="true">
      <arg value="${app}"/>
      <arg value="${version}"/>
      <arg value="${home}"/>
    </java>
  </target>

  <target name="pac" depends="installapp" description="create pac package">
    <java classpath="${home}/javaforce.jar" classname="javaforce.utils.GenPAC" fork="true">
      <arg value="${app}"/>
      <arg value="${version}"/>
      <arg value="${home}"/>
    </java>
  </target>

  <!-- MacOSX targets -->

  <target name="dmg" depends="executable,graal" description="create dmg package">
    <java classpath="${home}/javaforce.jar" classname="javaforce.utils.GenDMG" fork="true">
      <arg value="${app}"/>
      <arg value="${app}-${version}.dmg"/>
      <arg value="${jre}"/>
      <arg value="${ffmpeg_home}"/>
    </java>
    <copy file="${app}-${version}.dmg" todir="${home}/release" overwrite="true"/>
  </target>
</project>
