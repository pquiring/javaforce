<project name="javaforce" default="jar" basedir="." xmlns:if="ant:if" xmlns:unless="ant:unless">
  <description>JavaForce SDK</description>
  <!-- set global properties for this build -->
  <property name="app" value="javaforce"/>
  <property name="apptype" value="console"/>
  <property name="src" location="src"/>
  <property name="build" location="classes"/>
  <property name="build-jnlp" location="classes-jnlp"/>
  <property name="home" value="."/>
  <property name="noelf" value="true"/>

  <property name="debian.depends" value="default-jre-headless    , jfcifs, jfmina, jfsshd-core, jfsshd-common, jfsshd-sftp, jfsshd-scp, libv4l-0 , desktop-file-utils, libxcursor1"/>
  <property name="fedora.depends" value="java-17-openjdk-headless, jfcifs, jfmina, jfsshd-core, jfsshd-common, jfsshd-sftp, jfsshd-scp, libv4l   , desktop-file-utils"/>
  <property name="arch.depends"   value="jre-openjdk-headless    , jfcifs, jfmina, jfsshd-core, jfsshd-common, jfsshd-sftp, jfsshd-scp, v4l-utils, desktop-file-utils"/>

  <property environment="env"/>

  <fileset dir="." id="classpath">
    <include name="bcprov.jar"/>
    <include name="bctls.jar"/>
    <include name="jargs.jar"/>
    <include name="jcifs.jar"/>
    <include name="jdom.jar"/>
    <include name="llrp.jar"/>
    <include name="log4j-1.2-api.jar"/>
    <include name="log4j-api.jar"/>
    <include name="log4j-core.jar"/>
    <include name="mina-core.jar"/>
    <include name="slf4j-api.jar"/>
    <include name="slf4j-log4j12.jar"/>
    <include name="sshd-common.jar"/>
    <include name="sshd-core.jar"/>
    <include name="sshd-sftp.jar"/>
    <include name="sshd-scp.jar"/>
    <include name="batik-all.jar"/>
  </fileset>

  <import file="base.xml"/>

  <property name="version" value="${javaforce-version}"/>

  <!-- get native dependancies -->

  <available property="have-glfw" file="native/glfw/src/window.c"/>
  <target name="get-glfw" unless="have-glfw" description="download glfw">
    <exec command="git clone https://github.com/glfw/glfw.git native/glfw"/>
    <exec command="git checkout tags/${glfw-version}" dir="native/glfw"/>
  </target>

  <available property="have-stb" file="native/stb/stb_truetype.h"/>
  <target name="get-stb" unless="have-stb" description="download stb">
    <exec command="git clone https://github.com/nothings/stb.git native/stb"/>
  </target>

  <target name="get-ffmpeg-win64" description="download ffmpeg for Win64">
    <echo message="Downloading: jfcodecs-win64.zip"/>
    <get src="http://javaforce.sourceforge.net/jfcodecs-win64.zip" dest="jfcodecs-win64.zip"/>
    <mkdir dir="ffmpeg"/>
    <unzip src="jfcodecs-win64.zip" dest="ffmpeg"/>
  </target>

  <target name="get-ffmpeg-mac64" description="download ffmpeg for mac64">
    <echo message="Downloading: jfcodecs-mac64.zip"/>
    <get src="http://javaforce.sourceforge.net/jfcodecs-mac64.zip" dest="jfcodecs-mac64.zip"/>
    <mkdir dir="ffmpeg"/>
    <unzip src="jfcodecs-mac64.zip" dest="ffmpeg"/>
  </target>

  <import file="get-jars.xml"/>

  <available property="have-repo" file="repo/readme.txt"/>
  <target name="get-repo" unless="have-repo" description="download repo">
    <exec command="git clone https://github.com/pquiring/repo"/>
  </target>

  <target name="depjars">
    <!-- depends via antcalls -->
    <antcall target="depnatives"/>
    <antcall target="get-glfw"/>
    <antcall target="get-stb"/>
    <antcall target="get-repo"/>
    <antcall target="getjars"/>
    <antcall target="jar-jcifs"/>
    <antcall target="jar-bcprov"/>
    <antcall target="jar-bctls"/>
    <antcall target="jar-bcutil"/>
    <antcall target="jar-filters"/>
    <antcall target="jar-llrp"/>
    <antcall target="jar-jdom"/>
    <antcall target="jar-mina1-core"/>
    <antcall target="jar-sshd-core"/>
    <antcall target="jar-sshd-common"/>
    <antcall target="jar-sshd-sftp"/>
    <antcall target="jar-sshd-scp"/>
    <antcall target="jar-jargs"/>
    <antcall target="jar-log4j-core"/>
    <antcall target="jar-log4j-api"/>
    <antcall target="jar-log4j-1.2-api"/>
    <antcall target="jar-slf4j-api"/>
    <antcall target="jar-slf4j-log4j12"/>
    <antcall target="jar-batik-all"/>
    <antcall target="jar-xmlgraphics-commons"/>
    <antcall target="jar-xml-apis-ext"/>
  </target>

  <target name="compile" depends="getjars,depjars" description="compile the source">
    <!-- Compile the java code from ${src} into ${build} -->
    <mkdir dir="${build}"/>
    <javac srcdir="${src}" destdir="${build}" target="${jdkver}" source="${jdkver}" debug="true" includeantruntime="false" nativeheaderdir="native/headers">
      <classpath>
        <fileset refid="classpath"/>
      </classpath>
    </javac>
  </target>

  <target name="jar" depends="depjars,compile" description="build jar file">
    <!-- Build jar file from class files -->
    <jar destfile="javaforce.jar" includes="**/*.class" basedir="${build}">
      <fileset dir="${src}">
        <include name="**/*.png"/>
        <include name="**/*.html"/>
        <include name="**/*.js"/>
        <include name="**/*.css"/>
        <include name="**/*.ttf"/>
      </fileset>
      <fileset dir=".">
        <include name="META-INF/**/*"/>
      </fileset>
    </jar>
    <copy file="javaforce.jar" tofile="${lib}/javaforce-${version}.jar"/>
  </target>

  <target name="compile-jnlp" description="compile the source">
    <!-- Compile the java code from ${src} into ${build-jnlp} -->
    <mkdir dir="${build-jnlp}"/>
    <javac srcdir="${src}" destdir="${build-jnlp}" target="1.8" source="1.8" debug="true" includeantruntime="false">
      <include name="javaforce/JF.java"/>
      <include name="javaforce/HTTP.java"/>
      <include name="javaforce/HTTPS.java"/>
      <include name="javaforce/XML.java"/>
      <include name="javaforce/utils/JNLP.java"/>
    </javac>
  </target>

  <target name="jnlp" depends="compile-jnlp" description="build jnlp jar file">
    <!-- build jnlp jar file from class files -->
    <jar destfile="${lib}/jnlp.jar" includes="**/*.class" basedir="${build-jnlp}">
      <manifest>
        <attribute name="Main-Class" value="javaforce.utils.JNLP"/>
      </manifest>
    </jar>
    <copy file="${lib}/jnlp.jar" todir="."/>
  </target>

  <target name="repo" description="download repo files">
    <exec command="git clone https://github.com/pquiring/repo"/>
  </target>

  <!-- sudo ant install -->
  <target name="install" description="install files">
    <copy file="javaforce.jar" todir="/usr/share/java"/>
    <copy file="bouncycastle.jar" todir="/usr/share/java"/>
    <copy file="filters.jar" todir="/usr/share/java"/>

    <copy file="lnxbin/jbus-call" todir="/usr/bin"/>
    <chmod file="/usr/bin/jbus-call" perm="+x"/>
    <copy file="lnxbin/jbus-client" todir="/usr/bin"/>
    <chmod file="/usr/bin/jbus-client" perm="+x"/>

    <ant antfile="build-jfpty.xml" target="installapp" inheritAll="false"/>
    <ant antfile="build-jfsudo.xml" target="installapp" inheritAll="false"/>
    <ant antfile="build-jfsudo-ask.xml" target="installapp" inheritAll="false"/>
    <ant antfile="build-jfopen.xml" target="installapp" inheritAll="false"/>
    <ant antfile="build-filesplitter.xml" target="installapp" inheritAll="false"/>
    <ant antfile="build-imageconvert.xml" target="installapp" inheritAll="false"/>
    <ant antfile="build-findreplace.xml" target="installapp" inheritAll="false"/>
    <ant antfile="build-pngalpha.xml" target="installapp" inheritAll="false"/>
    <ant antfile="build-jf-update-desktop-database.xml" target="installapp" inheritAll="false"/>
    <ant antfile="build-jfsmbget.xml" target="installapp" inheritAll="false"/>
    <ant antfile="build-jfservice.xml" target="installapp" inheritAll="false"/>
    <ant antfile="build-jf-monitor-dir.xml" target="installapp" inheritAll="false"/>
    <ant antfile="build-web.xml" target="installapp" inheritAll="false"/>
    <ant antfile="build-jfcp.xml" target="installapp" inheritAll="false"/>
    <ant antfile="build-jfmv.xml" target="installapp" inheritAll="false"/>
    <ant antfile="build-jfrm.xml" target="installapp" inheritAll="false"/>
    <ant antfile="build-jfver.xml" target="installapp" inheritAll="false"/>
    <ant antfile="build-jfresmgr.xml" target="installapp" inheritAll="false"/>
    <ant antfile="build-jfsshd.xml" target="installapp" inheritAll="false"/>
  </target>

  <target name="utils" depends="jar" description="build exe for utils">
    <ant antfile="build-copypath.xml" inheritAll="false"/>
    <ant antfile="build-findreplace.xml" inheritAll="false"/>
    <ant antfile="build-filesplitter.xml" inheritAll="false"/>
    <ant antfile="build-imageconvert.xml" inheritAll="false"/>
    <ant antfile="build-pngalpha.xml" inheritAll="false"/>
    <ant antfile="build-scriptex.xml" inheritAll="false"/>
    <ant antfile="build-web.xml" inheritAll="false"/>
    <ant antfile="build-vss.xml" inheritAll="false"/>
    <ant antfile="build-jfsshd.xml" inheritAll="false"/>
    <zip destfile="jfUtilities-${version}.zip">
      <fileset dir=".">
        <include name="*.exe"/>
        <include name="jfnative64.dll"/>
      </fileset>
      <fileset dir="jre_base/bin">
        <include name="*.dll"/>
      </fileset>
    </zip>
  </target>

  <target name="jre-base" description="build JRE for bundled JRE builds with only base">
    <property file="jf.properties"/>
    <exec command="jlink --module-path ${java.home}/jmods --add-modules ${jre-base} --output jre_base"/>
    <delete>
      <fileset dir="jre_base/bin" includes="java**.exe"/>
    </delete>
    <delete dir="jre_base/include"/>
    <delete dir="jre_base/legal"/>
  </target>

  <target name="jre-base-desktop" description="build JRE for bundled JRE builds with desktop (swing) support">
    <property file="jf.properties"/>
    <exec command="jlink --module-path ${java.home}/jmods --add-modules ${jre-base},${jre-desktop} --output jre_base_desktop"/>
    <delete>
      <fileset dir="jre_base_desktop/bin" includes="java**.exe"/>
    </delete>
    <delete dir="jre_base_desktop/include"/>
    <delete dir="jre_base_desktop/legal"/>
  </target>

  <target name="jre-base-desktop-java" description="build JRE for bundled JRE builds with desktop (swing) support (includes java executables)">
    <property file="jf.properties"/>
    <exec command="jlink --module-path ${java.home}/jmods --add-modules ${jre-base},${jre-desktop} --output jre_base_desktop_java"/>
    <delete dir="jre_base_desktop_java/include"/>
    <delete dir="jre_base_desktop_java/legal"/>
  </target>

  <target name="jre-base-javac" description="build JRE for bundled JRE builds with base and Java compiler">
    <property file="jf.properties"/>
    <exec command="jlink --module-path ${java.home}/jmods --add-modules ${jre-base},${jre-javac} --output jre_base_javac"/>
    <delete>
      <fileset dir="jre_base_javac/bin" includes="java**.exe"/>
    </delete>
    <delete dir="jre_base_javac/include"/>
    <delete dir="jre_base_javac/legal"/>
  </target>

  <target name="clean" description="deletes compiled files">
    <delete>
      <fileset dir="classes" includes="**/*.class"/>
      <fileset dir="${lib}" includes="javaforce-${version}.jar"/>
      <fileset dir="." includes="*.jar"/>
      <fileset dir="." includes="*.asc"/>
    </delete>
  </target>
</project>
