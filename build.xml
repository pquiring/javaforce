<project name="javaforce" default="jar" basedir="." xmlns:if="ant:if" xmlns:unless="ant:unless">
  <description>JavaForce SDK</description>
  <!-- set global properties for this build -->
  <property name="app" value="javaforce"/>
  <property name="apptype" value="console"/>
  <property name="src" location="src"/>
  <property name="build" location="classes"/>
  <property name="home" value="."/>
  <property name="noelf" value="true"/>
  <property name="maven" value="io/github/pquiring"/>

  <property environment="env"/>

  <property file="javaforce.properties"/>

  <fileset dir="." id="classpath">
    <include name="bcprov.jar"/>
    <include name="bctls.jar"/>
    <include name="jargs.jar"/>
    <include name="jcifs.jar"/>
    <include name="jdom.jar"/>
    <include name="llrp.jar"/>
    <include name="sshd-common.jar"/>
    <include name="sshd-core.jar"/>
    <include name="sshd-sftp.jar"/>
    <include name="sshd-scp.jar"/>
    <include name="jsvg.jar"/>
    <include name="slf4j-api.jar"/>
    <include name="plc4j-api.jar"/>
  </fileset>

  <property file="versions.properties"/>

  <property name="version" value="${javaforce-version}"/>

  <import file="base.xml"/>

  <!-- get native dependancies -->

  <available property="have-glfw" file="native/glfw/src/window.c"/>
  <target name="get-glfw" unless="have-glfw" description="download glfw">
    <exec command="git clone https://github.com/glfw/glfw.git native/glfw"/>
    <exec command="git checkout -q tags/${glfw-version}" dir="native/glfw"/>
  </target>

  <available property="have-stb" file="native/stb/stb_truetype.h"/>
  <target name="get-stb" unless="have-stb" description="download stb">
    <exec command="git clone https://github.com/nothings/stb.git native/stb"/>
  </target>

  <available property="have-opencl" file="native/opencl/CL/cl.h"/>
  <target name="get-opencl" unless="have-opencl" description="download opencl headers">
    <exec command="git clone https://github.com/KhronosGroup/OpenCL-Headers.git native/opencl"/>
    <exec command="git checkout -q tags/${opencl-version}" dir="native/opencl"/>
  </target>

  <!-- download ffmpeg (windows only) -->

  <target name="get-ffmpeg-win64-bin" description="download ffmpeg for Win64">
    <echo message="Downloading: ffmpeg-win64-bin-${ffmpeg-version}.zip"/>
    <get src="http://javaforce.sourceforge.net/ffmpeg/win64/amd64/ffmpeg-win64-bin-${ffmpeg-version}.zip" dest="ffmpeg-win64-bin-${ffmpeg-version}.zip"/>
    <mkdir dir="ffmpeg-bin"/>
    <unzip src="ffmpeg-win64-bin-${ffmpeg-version}.zip" dest="ffmpeg-bin"/>
  </target>

  <target name="get-ffmpeg-win64-src" description="download ffmpeg for Win64">
    <echo message="Downloading: ffmpeg-win64-src-${ffmpeg-version}.zip"/>
    <get src="http://javaforce.sourceforge.net/ffmpeg/win64/amd64/ffmpeg-win64-src-${ffmpeg-version}.zip" dest="ffmpeg-win64-src-${ffmpeg-version}.zip"/>
    <mkdir dir="ffmpeg-src"/>
    <unzip src="ffmpeg-win64-src-${ffmpeg-version}.zip" dest="ffmpeg-src"/>
  </target>

  <import file="get-jars.xml"/>

  <available property="have-repo" file="repo/readme.txt"/>
  <target name="get-repo" unless="have-repo" description="download repo">
    <exec command="git clone https://github.com/pquiring/repo"/>
  </target>

  <target name="depjars" unless="fast-build">
    <!-- depends via antcalls -->
    <antcall target="depnatives"/>
    <antcall target="get-glfw"/>
    <antcall target="get-stb"/>
    <antcall target="get-opencl"/>
    <antcall target="get-repo"/>
    <antcall target="getjars"/>
    <antcall target="jar-jcifs"/>
    <antcall target="jar-bcprov"/>
    <antcall target="jar-bctls"/>
    <antcall target="jar-bcutil"/>
    <antcall target="jar-filters"/>
    <antcall target="jar-llrp"/>
    <antcall target="jar-jdom"/>
    <antcall target="jar-sshd-core"/>
    <antcall target="jar-sshd-common"/>
    <antcall target="jar-sshd-sftp"/>
    <antcall target="jar-sshd-scp"/>
    <antcall target="jar-jargs"/>
    <antcall target="jar-mina-core"/>
    <antcall target="jar-slf4j-api"/>
    <antcall target="jar-slf4j-simple"/>
    <antcall target="jar-slf4j-nop"/>
    <antcall target="jar-log4j-core"/>
    <antcall target="jar-log4j-api"/>
    <antcall target="jar-jsvg"/>
    <antcall target="jar-netty-common"/>
    <antcall target="jar-netty-buffer"/>
    <antcall target="jar-netty-transport"/>
    <antcall target="jar-netty-handler"/>
    <antcall target="jar-netty-codec"/>
    <antcall target="jar-plc4j-api"/>
    <antcall target="jar-plc4j-spi"/>
    <antcall target="jar-plc4j-transport-tcp"/>
    <antcall target="jar-plc4j-transport-udp"/>
    <antcall target="jar-plc4j-driver-s7"/>
  </target>

  <target name="compile" depends="depjars" unless="fast-build" description="compile the source">
    <!-- Compile the java code from ${src} into ${build} -->
    <mkdir dir="${build}"/>
    <javac srcdir="${src}" destdir="${build}" release="${java-version}" debug="true" includeantruntime="false" nativeheaderdir="native/headers">
      <classpath>
        <fileset refid="classpath"/>
      </classpath>
    </javac>
  </target>

  <target name="jar" depends="depjars,compile" unless="fast-build" description="build jar file">
    <!-- Build jar file from class files -->
    <jar destfile="javaforce.jar" includes="**/*.class" basedir="${build}">
      <fileset dir="${src}">
        <include name="**/*.png"/>
        <exclude name="javaforce/icons/16/*.png"/>
        <exclude name="javaforce/icons/32/*.png"/>
        <include name="**/*.html"/>
        <include name="**/*.js"/>
        <include name="**/*.css"/>
        <include name="**/*.ttf"/>
      </fileset>
      <fileset dir=".">
        <include name="META-INF/**/*"/>
      </fileset>
    </jar>
    <copy file="javaforce.jar" tofile="${lib}/javaforce-${version}.jar"/>
    <antcall target="icons"/>
  </target>

  <target name="icons" depends="" description="create icons">
    <sequential>
      <mkdir dir="src/javaforce/icons/16"/>
      <mkdir dir="src/javaforce/icons/32"/>
      <java classpath="${home}/javaforce.jar;${home}/jsvg.jar" classname="javaforce.utils.GenIcons" fork="true" jvm="${user.home}/bin/jfexec">
      </java>
      <jar destfile="jficons.jar" includes="**/*.svg" basedir="${src}">
        <fileset dir="${src}">
          <include name="javaforce/icons/16/*.png"/>
          <include name="javaforce/icons/32/*.png"/>
        </fileset>
      </jar>
      <copy file="jficons.jar" tofile="${lib}/jficons-${version}.jar"/>
    </sequential>
  </target>

  <target name="repo" description="download repo files">
    <exec command="git clone https://github.com/pquiring/repo"/>
  </target>

  <target name="install" description="install files">
    <copy file="javaforce.jar" todir="/usr/share/java"/>
    <copy file="jficons.jar" todir="/usr/share/java"/>
  </target>

  <target name="jre-all" description="build JRE with all modules included">
    <exec command="jlink --module-path ${java.home}/jmods --add-modules ALL-MODULE-PATH --output jre_all"/>
  </target>

  <target name="jre-base" description="build JRE for bundled JRE builds with only base">
    <exec command="jlink --module-path ${java.home}/jmods --add-modules ${jre-base} --output jre_base"/>
    <delete>
      <fileset dir="jre_base/bin" includes="java**.exe"/>
    </delete>
    <delete dir="jre_base/include"/>
    <delete dir="jre_base/legal"/>
  </target>

  <target name="jre-base-desktop" description="build JRE for bundled JRE builds with desktop (swing) support">
    <exec command="jlink --module-path ${java.home}/jmods --add-modules ${jre-base},${jre-desktop} --output jre_base_desktop"/>
    <delete>
      <fileset dir="jre_base_desktop/bin" includes="java**.exe"/>
    </delete>
    <delete dir="jre_base_desktop/include"/>
    <delete dir="jre_base_desktop/legal"/>
  </target>

  <target name="jre-base-desktop-java" description="build JRE for bundled JRE builds with desktop (swing) support (includes java executables)">
    <exec command="jlink --module-path ${java.home}/jmods --add-modules ${jre-base},${jre-desktop} --output jre_base_desktop_java"/>
    <delete dir="jre_base_desktop_java/include"/>
    <delete dir="jre_base_desktop_java/legal"/>
  </target>

  <target name="jre-base-javac" description="build JRE for bundled JRE builds with base and Java compiler">
    <exec command="jlink --module-path ${java.home}/jmods --add-modules ${jre-base},${jre-javac} --output jre_base_javac"/>
    <delete>
      <fileset dir="jre_base_javac/bin" includes="java**.exe"/>
    </delete>
    <delete dir="jre_base_javac/include"/>
    <delete dir="jre_base_javac/legal"/>
  </target>

  <target name="clean" description="deletes compiled files">
    <delete>
      <fileset dir="classes" includes="**/*.class"/>
      <fileset dir="${lib}" includes="javaforce-${version}.jar"/>
      <fileset dir="." includes="*.jar"/>
      <fileset dir="." includes="*.asc"/>
      <fileset dir="native/headers" includes="*.h"/>
    </delete>
  </target>
</project>
